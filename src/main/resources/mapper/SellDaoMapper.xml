<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace命名空间，为了对sql语句进行隔离，方便管理 ，mapper开发dao方式，使用namespace有特殊作用 -->
<mapper namespace="com.etc.my.dao.SellDao">
<!-- 在mapper.xml文件中配置很多的sql语句，执行每个sql语句时，封装为MappedStatement对象
mapper.xml以statement为单位管理sql语句
 -->

    <select id="querySellByKeysOfPage" parameterType="sellOfKeysDto" resultType="sell">
        select *from t_sell
        <where>
            <if test="sell_phone!=null">
                and sell_phone like #{sell_phone}
            </if>
            <if test="sell_address!=null">
                and sell_address like #{sell_address}
            </if>
            <if test="sell_carname!=null">
                and sell_carname like #{sell_carname}
            </if>
            <if test="sell_cardept!=null">
                and sell_cardept like #{sell_cardept}
            </if>
            <if test="sell_status!=null">
                and sell_status like #{sell_status}
            </if>
        </where>
        order by sell_status desc limit #{page},#{size}
    </select>

    <select id="querySellCount" resultType="countDto" parameterType="sellOfKeysDto">
        select count(*) as allCount from t_sell
        <where>
            <if test="sell_phone!=null">
                and sell_phone like #{sell_phone}
            </if>
            <if test="sell_address!=null">
                and sell_address like #{sell_address}
            </if>
            <if test="sell_carname!=null">
                and sell_carname like #{sell_carname}
            </if>
            <if test="sell_cardept!=null">
                and sell_cardept like #{sell_cardept}
            </if>
            <if test="sell_status!=null">
                and sell_status like #{sell_status}
            </if>
        </where>
    </select>

    <update id="updateStatusById">
        update t_sell set sell_status='已沟通' where  sell_id =#{sellid} and sell_status='未沟通'
    </update>
</mapper>

